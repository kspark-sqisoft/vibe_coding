// Mocks generated by Mockito 5.4.6 from annotations
// in vibe_coding_flutter/test/features/post/mock_post_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:vibe_coding_flutter/features/post/domain/post_entity.dart'
    as _i2;
import 'package:vibe_coding_flutter/features/post/domain/post_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostEntity_0 extends _i1.SmartFake implements _i2.PostEntity {
  _FakePostEntity_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PostRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRepository extends _i1.Mock implements _i3.PostRepository {
  MockPostRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.PostEntity>> fetchPosts() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPosts, []),
            returnValue: _i4.Future<List<_i2.PostEntity>>.value(
              <_i2.PostEntity>[],
            ),
          )
          as _i4.Future<List<_i2.PostEntity>>);

  @override
  _i4.Future<_i2.PostEntity> fetchPost(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchPost, [id]),
            returnValue: _i4.Future<_i2.PostEntity>.value(
              _FakePostEntity_0(this, Invocation.method(#fetchPost, [id])),
            ),
          )
          as _i4.Future<_i2.PostEntity>);

  @override
  _i4.Future<_i2.PostEntity> createPost(
    String? title,
    String? content, {
    String? imageUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #createPost,
              [title, content],
              {#imageUrl: imageUrl},
            ),
            returnValue: _i4.Future<_i2.PostEntity>.value(
              _FakePostEntity_0(
                this,
                Invocation.method(
                  #createPost,
                  [title, content],
                  {#imageUrl: imageUrl},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.PostEntity>);

  @override
  _i4.Future<void> updatePost(
    String? id,
    String? title,
    String? content, {
    String? imageUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updatePost,
              [id, title, content],
              {#imageUrl: imageUrl},
            ),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deletePost(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePost, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String> uploadImage(_i5.Uint8List? imageBytes, String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#uploadImage, [imageBytes, fileName]),
            returnValue: _i4.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [imageBytes, fileName]),
              ),
            ),
          )
          as _i4.Future<String>);
}
